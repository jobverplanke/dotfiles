[PHP]
memory_limit=2048M
post_max_size=50M
upload_max_filesize=30M
date.timezone="Europe/Amsterdam"

[CLI Server]
cli_server.color=On

[opcache]
; Enable OPCache.
opcache.enable=1

; Enable OPCache CLI
opcache.enable_cli=1

; https://stitcher.io/blog/php-8-jit-setup
; Enable JIT by setting 'jit_buffer_size' and 'opcache.jit'
; JIT not working with XDebug https://bugs.php.net/bug.php?id=80608
; opcache.jit_buffer_size=100M

; https://wiki.php.net/rfc/jit#phpini_defaults
; opcache.jit=tracing

; How often (in seconds) should the code cache expire and check if your code has changed.
; E.g. use in development so it checks for updated code on every request.
opcache.revalidate_freq=0

; Controls how many PHP files, at most, can be held in memory at once.
; It's important that the codebase has LESS FILES than whatever you set this at.
; Otherwise increase it.
opcache.max_accelerated_files=16229

; The size of the shared memory storage used by OPcache, in megabytes.
opcache.memory_consumption=256

; PHP uses a technique called string interning to improve performance.
; E.g. if you have the string "foobar" 1000 times in your code, internally PHP will store 1
; immutable variable for this string and just use a pointer for the other 999 times you use it.
; Instead of having a pool of these immutable string for each SINGLE php-fpm process, it shares it
; across ALL of your php-fpm processes.
; It saves memory and improves performance, especially in big applications.
opcache.interned_strings_buffer=12

; It provides a faster mechanism for calling the de-constructors in the code
; at the end of a single request to speed up the response and recycle php workers
; so they're ready for the next incoming request faster
opcache.fast_shutdown=1

; PHP will check the file timestamp per opcache.revalidate_freq value.
; When disabled (commented) PHP files are ignored and NEVER checked for updated code.
; Enable in production
; opcache.validate_timestamps=0
